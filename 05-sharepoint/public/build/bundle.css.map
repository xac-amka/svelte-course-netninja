{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\App.svelte",
    "..\\..\\CreatePollForm.svelte",
    "..\\..\\Footer.svelte",
    "..\\..\\Header.svelte",
    "..\\..\\PollDetails.svelte",
    "..\\..\\PollList.svelte",
    "..\\..\\Button.svelte",
    "..\\..\\Card.svelte",
    "..\\..\\Tabs.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport Header from './components/Header.svelte';\n\timport Footer from './components/Footer.svelte';\n\timport Tabs from './shared/Tabs.svelte';\n\timport CreatePollForm from './components/CreatePollForm.svelte';\n\timport PollList from './components/PollList.svelte';\n\n\t//tabs\n\tlet items = ['Current Polls', 'Add New Poll'];\n\tlet activeItem = 'Current Polls';\n\n\tconst tabChange = (e) => {\n\t\tactiveItem = e.detail;\n\t}\n\n\tconst handleAddPoll = () => {\n\t\tactiveItem = 'Current Polls';\n\t}\n</script>\n\n<Header />\n<main>\n\t<Tabs {activeItem} {items} on:tabChange={tabChange}/>\n\t{#if activeItem === 'Current Polls'}\n\t\t<PollList />\n\t{:else}\n\t\t<CreatePollForm on:addPoll={handleAddPoll}/>\n\t{/if}\n</main>\n<Footer />\n\n<style>\n\tmain {\n\t\tmax-width: 960px;\n\t\tmargin: 40px auto;\n\t}\n</style>",
    "<script>\r\n\r\n    import { createEventDispatcher } from 'svelte';\r\n    const dispatch = createEventDispatcher();\r\n    import store from '../store/store.js';\r\n    import Button from '../shared/Button.svelte';\r\n\r\n    let fields = {\r\n        question: '',\r\n        answerA: '',\r\n        answerB: '',\r\n    }\r\n\r\n    let errors = {\r\n        question: '',\r\n        answerA: '',\r\n        answerB: '',\r\n    }\r\n\r\n    let valid = false;\r\n\r\n    const handleSubmit = () => {\r\n        valid = true;\r\n\r\n        // Validate question\r\n        if(fields.question.trim().length < 5){\r\n            valid = false;\r\n            errors.question = 'Question must be at least 5 characters long';\r\n \r\n        }else{\r\n            errors.question = '';\r\n        }\r\n        // Validate answer a\r\n        if(fields.answerA.trim().length < 1){\r\n            valid = false;\r\n            errors.answerA = 'Answer A cannot be empty';\r\n        }else{\r\n            errors.answerA = '';\r\n        }\r\n        // Validate answer b\r\n        if(fields.answerB.trim().length < 1){\r\n            valid = false;\r\n            errors.answerB = 'answer B cannot be empty';\r\n        }else{\r\n            errors.answerB = '';\r\n        }\r\n\r\n        // add new Poll\r\n        if(valid){\r\n            // console.log('valid', fields);\r\n            let poll = {\r\n                ...fields,\r\n                votesA: 0, \r\n                votesB: 0,\r\n                id: Math.random()\r\n            }\r\n            // Save poll to store\r\n            store.update(currentPolls => {\r\n                return [poll, ...currentPolls];\r\n            })\r\n            dispatch('addPoll');\r\n        }\r\n    }\r\n\r\n</script>\r\n\r\n<style>\r\n    form {\r\n        width: 400px;\r\n        margin: 0 auto;\r\n        text-align: center;\r\n    }\r\n    .form-field {\r\n        margin: 18px auto;\r\n    }\r\n    input {\r\n        width: 100%;\r\n        border-radius: 6px;\r\n    }\r\n    label {\r\n        margin: 10px auto;\r\n        text-align: left;\r\n    }\r\n    .error {\r\n        font-weight: bold;\r\n        font-size: 12px;\r\n        color: #d91b42;\r\n    }\r\n</style>    \r\n\r\n<form on:submit|preventDefault={handleSubmit}>\r\n    <div class=\"form-field\">\r\n        <label for=\"question\">Poll Question:</label>\r\n        <input type=\"text\" id=\"question\" bind:value={fields.question}>\r\n        <div class=\"error\"> {errors.question} </div>\r\n    </div>\r\n    <div class=\"form-field\">\r\n        <label for=\"answer-a\">Answer A:</label>\r\n        <input type=\"text\" id=\"answer-a\" bind:value={fields.answerA}>\r\n        <div class=\"error\"> {errors.answerA} </div>\r\n    </div>\r\n    <div class=\"form-field\">\r\n        <label for=\"answer-b\">Answer B:</label>\r\n        <input type=\"text\" id=\"answer-b\" bind:value={fields.answerB}>\r\n        <div class=\"error\"> {errors.answerB} </div>\r\n    </div>\r\n    <Button type=\"secondary\" inverse={false} flat={true} >Add Poll</Button>\r\n</form>",
    "<style>\r\n    footer {\r\n        padding: 40px;\r\n        text-align: center;\r\n    }\r\n    .copyright {\r\n        color: #aaa;\r\n        font-size: 14px;\r\n        display: inline;\r\n        padding: 20px;\r\n        border-top: 1px solid #ddd;\r\n    }\r\n</style>\r\n\r\n<footer>\r\n    <div class=\"copyright\">CopyrightÂ© 2020 Studentdevs</div>\r\n</footer>",
    "<style>\r\n    header{\r\n        background: #F7F7F7;\r\n        padding: 20px;\r\n    }\r\n    h1{\r\n        margin: 0;\r\n        text-align: center;\r\n    }\r\n    img{\r\n        max-width: 180px;\r\n    }\r\n</style>\r\n\r\n<header>\r\n    <h1>\r\n        <img src=\"./favicon.png\" alt=\"Svelte Poll Logo\" >\r\n    </h1>\r\n</header>",
    "<script>\r\n    import store from '../store/store.js';\r\n    import Card from '../shared/Card.svelte'; \r\n    import Button from '../shared/Button.svelte'; \r\n\timport { tweened } from 'svelte/motion';\r\n\r\n    export let poll;\r\n\r\n    // Reactive values\r\n    $: totalVotes = poll.votesA + poll.votesB;\r\n    $: percentA = Math.floor(100 / totalVotes * poll.votesA) || 0;\r\n    $: percentB = Math.floor(100 / totalVotes * poll.votesB) || 0;\r\n\r\n    // Tweened percentages\r\n    const tweenedA = tweened(0);\r\n    const tweenedB = tweened(0);\r\n    $: tweenedA.set(percentA);\r\n    $: tweenedB.set(percentB);\r\n    // $: console.log($tweenedA, $tweenedB);\r\n\r\n    const handleVote = (option, id) => {\r\n        store.update((currentPolls)=> {\r\n            let copiedPolls = [...currentPolls];\r\n            let upvotedPoll = copiedPolls.find((poll) => poll.id == id);\r\n\r\n            if(option === 'a'){\r\n                upvotedPoll.votesA++;\r\n            }\r\n            if(option === 'b'){\r\n                upvotedPoll.votesB++;\r\n            }\r\n            \r\n            return copiedPolls;\r\n        });\r\n    };\r\n\r\n    // Deleting poll\r\n    const handleDelete = (id, e) => {\r\n        e.preventDefault();\r\n        store.update(currentPolls => {\r\n            return currentPolls.filter(poll => poll.id != id);\r\n        });\r\n    }\r\n</script>\r\n\r\n<style>\r\n    h3 {\r\n        margin: 0 auto;\r\n        color: #555;\r\n    }\r\n    p {\r\n        margin-top: 6px;\r\n        font-size: 14px;\r\n        color: #aaa;\r\n        margin-bottom: 30px;\r\n    }\r\n    .answer {\r\n        background: #fafafa;\r\n        cursor: pointer;\r\n        margin: 10px auto;\r\n        position: relative;\r\n    }\r\n    .answer:hover {\r\n        opacity: 0.6;\r\n    }\r\n    span {\r\n        display: inline-block;\r\n        padding: 10px 20px;\r\n    }\r\n    .percent{\r\n        height: 100%;\r\n        position: absolute;\r\n        box-sizing: border-box;\r\n    }\r\n    .percent-a {\r\n        border-right: 4px solid #d91b42;\r\n        background: rgba(217, 27, 66, 0.2);\r\n    }\r\n    .percent-b {\r\n        border-right: 4px solid #45c496;\r\n        background: rgba(69, 196, 150, 0.2);\r\n    }\r\n    .delete {\r\n        margin-top: 30px;\r\n        text-align: center;\r\n    }\r\n</style>\r\n\r\n<Card>\r\n    <div class=\"poll\">\r\n        <h3>{poll.question}</h3>\r\n        <p>Total votes: {totalVotes} </p>\r\n        <div class=\"answer\" on:click={ ()=> handleVote('a', poll.id) }>\r\n            <div class=\"percent percent-a\" style=\"width: {$tweenedA}%;\"></div>\r\n            <span> {poll.answerA} ({ poll.votesA }) </span>\r\n        </div>\r\n        <div class=\"answer\" on:click={ ()=> handleVote('b', poll.id) }>\r\n            <div class=\"percent percent-b\" style=\"width: {$tweenedB}%;\"></div>\r\n            <span> {poll.answerB} ({ poll.votesB }) </span>\r\n        </div>\r\n        <div class=\"delete\">\r\n            <Button flat={true} on:click={ (e)=> handleDelete(poll.id, e) }>Delete</Button>\r\n        </div>\r\n    </div>\r\n</Card>",
    "<script>\r\n    // There is a more transition\r\n    import { fade, slide, scale } from 'svelte/transition';\r\n    import { flip } from 'svelte/animate';\r\n\r\n    // import { onMount, onDestroy } from 'svelte';\r\n    import store from '../store/store.js';\r\n    import PollDetails from './PollDetails.svelte';\r\n    // First Method\r\n    // export let polls = [];\r\n\r\n    // const unsub = store.subscribe((data)=> {\r\n    //     polls = data;\r\n    // });\r\n\r\n    // // More LIFECYCLE HOOKS from documentation\r\n    // onMount(()=> {\r\n    //     // Maybe get data from a db\r\n    //     console.log('component mounted');\r\n    // });\r\n\r\n    // onDestroy(()=> {\r\n    //     // unsub from store\r\n    //     console.log('component destroyed');\r\n    //     unsub();\r\n    // });\r\n\r\n    // Second method is just using $ sign\r\n</script>\r\n\r\n<style>\r\n    .poll-list {\r\n        display: grid;\r\n        grid-template-columns: repeat(2, 1fr);\r\n        grid-gap: 20px;\r\n    }\r\n</style>\r\n<!-- We only use transition on HTML elements, not custom element -->\r\n<div class=\"poll-list\">\r\n    <!-- pipe local says just transition in current svelte file, if it goes outside don't transition -->\r\n        <!-- <div {poll} in:fade out:scale|local >  -->\r\n    {#each $store as poll (poll.id) }\r\n        <div in:fade out:scale|local animate:flip={{duration: 500}}> \r\n            <PollDetails {poll} />\r\n        </div>\r\n    {:else}\r\n            <!-- <div transition:fade>\r\n            <PollDetails {poll} />\r\n        </div> -->\r\n        <p>Poll list is empty, please add new poll here</p>\r\n    {/each}\r\n</div>",
    "<script>\r\n    export let type = 'primary';\r\n    export let flat = false;\r\n    export let inverse = false;\r\n</script>\r\n\r\n<style>\r\n    button {\r\n        border: 0;\r\n        cursor: pointer;\r\n        border-radius: 6px;\r\n        padding: 8px 12px;\r\n        font-weight: bold;\r\n        box-shadow: 1px 2px 3px rgba(0,0,0,0.2);\r\n    }\r\n    .primary {\r\n        background: #d91b42;\r\n        color: #fff;\r\n    }\r\n    .secondary {\r\n        background: #45c496;\r\n        color: #fff;\r\n    }\r\n    .flat {\r\n        box-shadow: none;\r\n    }\r\n    .primary.inverse {\r\n        color: #d91b42;\r\n        background: #fff;\r\n        border: 2px solid #d91b42;\r\n    }\r\n    .secondary.inverse {\r\n        color: #45c496;\r\n        background: #fff;\r\n        border: 2px solid #45c496;\r\n    }\r\n</style>\r\n<!-- on:click is event forwarding -->\r\n<button class={type} class:flat={flat} class:inverse={inverse} on:click>\r\n    <slot></slot>\r\n</button>",
    "<style>\r\n    .card {\r\n        background: #fff;\r\n        padding: 20px;\r\n        border-radius: 6px;\r\n        box-shadow: 0px 2px 4px rgba(0,0,0,0.1);\r\n    }\r\n</style>\r\n\r\n<div class=\"card\">\r\n    <slot></slot>\r\n</div>",
    "<script>\r\n    import { createEventDispatcher } from 'svelte';\r\n    export let items;\r\n    export let activeItem;\r\n\r\n    const dispatch = createEventDispatcher();\r\n</script>\r\n\r\n<style>\r\n    .tabs {\r\n        margin-bottom: 40px;\r\n    }\r\n    ul {\r\n        display: flex;\r\n        justify-content: center;\r\n        padding: 0;\r\n        list-style: none;\r\n    }\r\n    li {\r\n        margin: 0 16px;\r\n        font-size: 18px;\r\n        color: #555;\r\n        cursor: pointer;\r\n    }\r\n\r\n    .active{\r\n        color: #d91b42;\r\n        border-bottom: 2px solid #d91b42;\r\n        padding-bottom: 8px;\r\n    }\r\n</style>\r\n\r\n<div class=\"tabs\">\r\n    <ul>\r\n        {#each items as item}\r\n            <li on:click={ ()=> dispatch('tabChange', item) }>\r\n                <div class:active={item === activeItem}>{item}</div>\r\n            </li>\r\n        {/each}\r\n    </ul>\r\n</div>"
  ],
  "names": [],
  "mappings": "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"
}